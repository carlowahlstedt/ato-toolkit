apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kfdefs.kfdef.apps.kubeflow.org
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  group: kfdef.apps.kubeflow.org
  names:
    kind: KfDef
    listKind: KfDefList
    plural: kfdefs
    singular: kfdef
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KfDef is the Schema for the kfdefs API
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          type: object
        spec:
          description: KfDefSpec defines the desired state of KfDef
          type: object
        status:
          description: KfDefStatus defines the observed state of KfDef
          type: object
      type: object
  version: v1
  versions:
    - name: v1
      served: true
      storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeflow-operator
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: kubeflow-operator
rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"
  - nonResourceURLs:
      - "*"
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeflow-operator
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubeflow-operator
    namespace: kubeflow-operator # TODO: This namespace probably needs to be dynamic, since Argo might be configured with a different namespace. Hardcoded for simplicity for now though, to avoid introducing the complication of a template for a single value.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeflow-operator
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kubeflow-operator
  template:
    metadata:
      labels:
        name: kubeflow-operator
    spec:
      containers:
        - command:
            - kfctl
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: aipipeline/kubeflow-operator:v1.0.0
          imagePullPolicy: Always
          name: kubeflow-operator
      serviceAccountName: kubeflow-operator